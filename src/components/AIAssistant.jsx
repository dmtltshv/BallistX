import { useState } from 'react';
import Markdown from 'react-markdown';
import { FaRobot, FaSyncAlt } from 'react-icons/fa';

const AIAssistant = ({ results, bullet, conditions, isFieldMode }) => {
  const [recommendations, setRecommendations] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);
  const [lastUpdated, setLastUpdated] = useState(null);

  const getAIRecommendations = async (data) => {
    try {
      const prompt = createPrompt(data);

      const response = await fetch('https://api.deepinfra.com/v1/openai/chat/completions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.REACT_APP_DEEPINFRA_API_KEY}`
        },
        body: JSON.stringify({
          model: "meta-llama/Meta-Llama-3-70B-Instruct",
          messages: [
            {
              role: "system",
              content: isFieldMode
                ? "–¢—ã –≤–æ–µ–Ω–Ω—ã–π –±–∞–ª–ª–∏—Å—Ç–∏–∫. –î–∞–≤–∞–π –∫—Ä–∞—Ç–∫–∏–µ —á–µ—Ç–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
                : "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–ª–∏—Å—Ç–∏–∫. –î–∞–≤–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–µ—Ç–∞–ª—è–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
            },
            {
              role: "user",
              content: prompt
            }
          ],
          temperature: isFieldMode ? 0.3 : 0.7,
          max_tokens: isFieldMode ? 500 : 1000
        })
      });

      if (!response.ok) throw new Error(`API error: ${response.status}`);
      const result = await response.json();
      return result.choices[0]?.message?.content || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç";
    } catch (err) {
      console.error("AI request failed:", err);
      throw err;
    }
  };

  const createPrompt = (data) => {
    if (isFieldMode) {
      return `–î–∞–π –∫—Ä–∞—Ç–∫–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å—Ç—Ä–µ–ª—å–±—ã –≤ –ø–æ–ª–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö:\n- –ü–∞—Ç—Ä–æ–Ω: ${data.bullet.caliber} ${data.bullet.name}\n- –í–µ—Ç–µ—Ä: ${data.conditions.windSpeed} –º/—Å, —É–≥–æ–ª ${data.conditions.windAngle}¬∞\n- –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ø—Ä–∞–≤–∫–∏ –Ω–∞ 100–º, 200–º, 300–º\n–§–æ—Ä–º–∞—Ç: –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑ 3-5 –ø—É–Ω–∫—Ç–æ–≤`;
    }

    return `–î–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –±–∞–ª–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑:\n**–ü–∞—Ç—Ä–æ–Ω**: ${data.bullet.caliber} ${data.bullet.name} (${data.bullet.weight}–≥, BC ${data.bullet.bc})\n**–ü–æ–≥–æ–¥–∞**: –≤–µ—Ç–µ—Ä ${data.conditions.windSpeed} –º/—Å, ${data.conditions.temperature}¬∞C, ${data.conditions.pressure} –º–º —Ä—Ç.—Å—Ç.\n**–¢—Ä–∞–µ–∫—Ç–æ—Ä–∏—è**:\n${data.trajectory
      .filter((_, i) => i % 3 === 0)
      .map(r => `${r.range}–º: ‚Üì${r.drop.toFixed(1)}—Å–º, ‚Ü∑${r.windage.moa.toFixed(1)}MOA`).join('\n')}
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π: –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏, –ø–æ–ø—Ä–∞–≤–∫–∏ –Ω–∞ –≤–µ—Ç–µ—Ä, –≤–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã.`;
  };

  const generateRecommendations = async () => {
    if (!bullet) return;

    setIsLoading(true);
    setError(null);
    setLastUpdated(new Date());

    try {
      const analysisData = { bullet, conditions, trajectory: results };
      const aiResponse = await getAIRecommendations(analysisData);
      setRecommendations(aiResponse);
    } catch (err) {
      console.error("AI Error:", err);
      setError("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ AI. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.");
      setRecommendations(getFallbackRecommendations());
    } finally {
      setIsLoading(false);
    }
  };

  const getFallbackRecommendations = () => {
    if (isFieldMode) {
      return `1. –ü–æ–ø—Ä–∞–≤–∫–∞ –Ω–∞ –≤–µ—Ç–µ—Ä: ${(conditions.windSpeed * 0.5).toFixed(1)} MOA/100–º\n2. –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è: ${results[3]?.range || 100}–º\n3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–ª–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ç–æ—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π`;
    }

    return `## –û—Ñ—Ñ–ª–∞–π–Ω-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n–î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.\n\n–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n- –ö–∞–ª–∏–±—Ä: ${bullet?.caliber || '–Ω–µ –≤—ã–±—Ä–∞–Ω'}\n- –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${conditions.windSpeed} –º/—Å\n- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${conditions.temperature}¬∞C`;
  };

  return (
    <div className={`ai-assistant card-glass ${isFieldMode ? 'field-mode' : ''}`}>
      <div className="form-row" style={{ justifyContent: 'space-between', alignItems: 'center' }}>
        <h3 className="section-title" data-icon="ü§ñ"> {isFieldMode ? '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏' : '–ë–∞–ª–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑'}</h3>
        <button className="btn" onClick={generateRecommendations} disabled={isLoading || !bullet}>
          {isLoading ? (<><FaSyncAlt className="spin" /> –ê–Ω–∞–ª–∏–∑...</>) : '–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}
        </button>
      </div>

      <div className="ai-content">
        {isLoading ? (
          <div className="center">
            <div className="loader" />
            <p>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...</p>
          </div>
        ) : (
          <div className="recommendations">
            {error && <div className="error" style={{ color: 'tomato', marginBottom: '0.5rem' }}>{error}</div>}
            <div className="markdown-content">
              <Markdown>
                {recommendations || (isFieldMode
                  ? '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∫—Ä–∞—Ç–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'
                  : '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞')}
              </Markdown>
            </div>
            {lastUpdated && (
              <div className="last-updated" style={{ fontSize: '0.8rem', color: 'gray' }}>
                –û–±–Ω–æ–≤–ª–µ–Ω–æ: {lastUpdated.toLocaleTimeString()}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default AIAssistant;
